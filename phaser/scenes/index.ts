/**
 * üé¨ SCENES EXPORT - T·∫•t c·∫£ scenes c·ªßa game
 *
 * KI·∫æN TR√öC ƒêA C·∫§P THEO D·∫†NG CH∆†I (Genre-based Tiered Architecture):
 *
 * C·∫•p 1 - Base Game Scene:
 * - BaseGameScene: Logic chung nh·∫•t cho t·∫•t c·∫£ minigame
 *
 * C·∫•p 2 - Genre Base Scenes:
 * - BasePlatformerScene: Logic chung cho d·∫°ng ch∆°i platformer
 * - (Future) BasePuzzleScene: Logic chung cho d·∫°ng ch∆°i puzzle
 * - (Future) BaseRacingScene: Logic chung cho d·∫°ng ch∆°i racing
 *
 * C·∫•p 3 - Concrete Scenes:
 * - OriginValleyScene: Platformer m·ªü ƒë·∫ßu ƒëa d·∫°ng c∆° ch·∫ø
 * - TempestPeakScene: Platformer leo d·ªçc v·ªõi gi√≥ b√£o kh·∫Øc nghi·ªát
 * - (Future) CaveScene: Platformer scene v·ªõi theme hang ƒë·ªông
 *
 * Logic Cores:
 * - PlatformerLogicCore: Core logic cho platformer (Composition pattern)
 */

// === SYSTEM SCENES ===
export { PreloadScene } from "./PreloadScene";

// === NEW ARCHITECTURE SCENES ===
// Base classes
export { BaseGameScene } from "./BaseGameScene";

// Platformer genre - Ki·∫øn tr√∫c m·ªõi
export {
  BasePlatformerScene,
  PlatformerLogicCore,
  OriginValleyScene,
  TempestPeakScene,
} from "./platformer";

// === FUTURE EXPANSIONS ===
// Export puzzle scenes when implemented:
// export { BasePuzzleScene, PuzzleLogicCore, MemoryGameScene, JigsawScene } from './puzzle';
//
// Export racing scenes when implemented:
// export { BaseRacingScene, RacingLogicCore, StreetRaceScene, OffRoadScene } from './racing';
